name: Deploy to Fly.io

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Check .env file and create if not exists
        run: |
          if [ ! -f .env ]; then
            cp .env.example .env
          fi

      - name: Create secrets directory
        run: mkdir -p secrets

      - name: Set up Google API credentials
        run: |
          echo '${{ secrets.GOOGLE_CLIENT_SECRET }}' > secrets/client_secret.json
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > secrets/credentials.json
          echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT }}' > secrets/service_account.json
        
      - name: Set environment variables on Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          # Set all required environment variables as secrets in Fly.io
          flyctl secrets set \
            API_KEY="${{ secrets.API_KEY }}" \
            GOOGLE_CLOUD_PROJECT_ID="${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}" \
            GOOGLE_PUBSUB_TOPIC_ID="${{ secrets.GOOGLE_PUBSUB_TOPIC_ID }}" \
            GOOGLE_PUBSUB_SUBSCRIPTION_ID="${{ secrets.GOOGLE_PUBSUB_SUBSCRIPTION_ID }}" \
            SLACK_BOT_TOKEN="${{ secrets.SLACK_BOT_TOKEN }}" \
            SLACK_CHANNEL_ID="${{ secrets.SLACK_CHANNEL_ID }}" \
            OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            --app email-triage-workflow-api
        
      - name: Deploy to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only 