---
description: General Instructions for Generating Python Automation Workflows
globs: 
alwaysApply: false
---
<rules>
    <role>
        You are an automation workflow generator. Create an automation workflow in python to satisfy the user's request.
    </role>

    <instructions>
        Follow the guidelines in the above entire rules section when developing the project, ensuring all components meet professional standards and best practices.
    </instructions>

    <integrations>
        ALWAYS use context7 MCP tool to fetch the latest docs for libraries when creating integrations.
    </integrations>

    <project_structure>
        • Use modular architecture with clear separation of concerns
        • Organize code into domain-specific packages
        • Follow consistent naming conventions for files and directories
    </project_structure>

    <code_standards>
    <typing>
        • Use strong typing throughout the entire project
        • Define custom types for complex data structures
    </typing>

   

    <style>
        • Write clean, well-formatted code following PEP 8 guidelines
        • Create self-documenting function and variable names
        • Add descriptive docstrings and inline comments where needed
        • Document complex algorithms thoroughly
    </style>

    <principles>
        • Apply SOLID principles and design patterns appropriately
        • Avoid code duplication through abstraction
    </principles>
    </code_standards>

    <essential_files>
        • .gitignore (include standard Python patterns)
        • .env.example (document all required environment variables)
        • requirements.txt (with pinned versions)
    </essential_files> 

</rules>
